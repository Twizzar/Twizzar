//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Twizzar.Design.CoreInterfaces.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class MessagesDesign {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MessagesDesign() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Twizzar.Design.CoreInterfaces.Resources.MessagesDesign", typeof(MessagesDesign).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :instanceOfClass.
        /// </summary>
        public static string Adorner_Class {
            get {
                return ResourceManager.GetString("Adorner_Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :stub.
        /// </summary>
        public static string Adorner_Interface {
            get {
                return ResourceManager.GetString("Adorner_Interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :instanceOfStruct.
        /// </summary>
        public static string Adorner_Struct {
            get {
                return ResourceManager.GetString("Adorner_Struct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basetype is always unique.
        /// </summary>
        public static string Basetype_is_always_unique {
            get {
                return ResourceManager.GetString("Basetype_is_always_unique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RootItemPath of the fixture isn&apos;t set but expected..
        /// </summary>
        public static string EventStreamCollection_InternalException_RootItemIdSet {
            get {
                return ResourceManager.GetString("EventStreamCollection_InternalException_RootItemIdSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open and close ({0}).
        /// </summary>
        public static string Expander_ToolTip {
            get {
                return ResourceManager.GetString("Expander_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixture Item with the name {0} and the type {1} already exists..
        /// </summary>
        public static string Fixture_Item_already_exists {
            get {
                return ResourceManager.GetString("Fixture_Item_already_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change an unnamed fixture item.
        /// </summary>
        public static string FixtureItemDefinitionNode_ChangeMemberConfiguration_Cannot_change_a_unnamed_fixture_item {
            get {
                return ResourceManager.GetString("FixtureItemDefinitionNode_ChangeMemberConfiguration_Cannot_change_a_unnamed_fixtu" +
                        "re_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be found..
        /// </summary>
        public static string FixtureItemDefinitionNode_ChangeMemberConfiguration_typeDescription_NotFound {
            get {
                return ResourceManager.GetString("FixtureItemDefinitionNode_ChangeMemberConfiguration_typeDescription_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change kind of unnamed Fixture Item.
        /// </summary>
        public static string FixtureItemDefinitionNode_CreateNamedFixtureItem_Cannot_change_kind_of_unnamed_Fixture_Item {
            get {
                return ResourceManager.GetString("FixtureItemDefinitionNode_CreateNamedFixtureItem_Cannot_change_kind_of_unnamed_Fi" +
                        "xture_Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name {0} already exists on type {1}.
        /// </summary>
        public static string FixtureItemDefinitionNode_CreateNamedFixtureItem_Name__0__already_exists_on_type__1_ {
            get {
                return ResourceManager.GetString("FixtureItemDefinitionNode_CreateNamedFixtureItem_Name__0__already_exists_on_type_" +
                        "_1_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BaseType cannot be converted to another kind.
        /// </summary>
        public static string FixtureItemKindChangedFailed_BaseTypeCannotBeConverted {
            get {
                return ResourceManager.GetString("FixtureItemKindChangedFailed_BaseTypeCannotBeConverted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Fixture Item does not contain a member with the name {0}.
        /// </summary>
        public static string FixtureItemMemberChangedFailed_FixtureItemDoesNotContainMember {
            get {
                return ResourceManager.GetString("FixtureItemMemberChangedFailed_FixtureItemDoesNotContainMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration of Kind {0} has no MemberConfiguration with the key name {1}.
        /// </summary>
        public static string FixtureItemReadModelQuery_CreateBaseTypeModel_Configuration_of_Kind__0__has_no_MemberConfiguration_with_the_key_name__1_ {
            get {
                return ResourceManager.GetString("FixtureItemReadModelQuery_CreateBaseTypeModel_Configuration_of_Kind__0__has_no_Me" +
                        "mberConfiguration_with_the_key_name__1_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration members does not have a key {0}.
        /// </summary>
        public static string FixtureItemReadModelQuery_CreateConstructorModel_Configuration_members_does_not_have_a_key__0_ {
            get {
                return ResourceManager.GetString("FixtureItemReadModelQuery_CreateConstructorModel_Configuration_members_does_not_h" +
                        "ave_a_key__0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member Configuration with the key {0} is not of type {1}.
        /// </summary>
        public static string FixtureItemReadModelQuery_MemberConfigIsNotOfType {
            get {
                return ResourceManager.GetString("FixtureItemReadModelQuery_MemberConfigIsNotOfType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance of {0} with additional configuration..
        /// </summary>
        public static string ToolTip_LinkWithNotIsInterfaceType {
            get {
                return ResourceManager.GetString("ToolTip_LinkWithNotIsInterfaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stub of {0} with additional configuration..
        /// </summary>
        public static string ToolTip_LinkWithsInterfaceType {
            get {
                return ResourceManager.GetString("ToolTip_LinkWithsInterfaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (automatically generated, since necessary dependency).
        /// </summary>
        public static string ToolTip_Postfix {
            get {
                return ResourceManager.GetString("ToolTip_Postfix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stub of {0}. {1}.
        /// </summary>
        public static string ToolTip_WithoutLinkWithIsInterfaceType {
            get {
                return ResourceManager.GetString("ToolTip_WithoutLinkWithIsInterfaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance of {0} with twizzar default behavior. {1}.
        /// </summary>
        public static string ToolTip_WithoutLinkWithNotIsInterfaceType {
            get {
                return ResourceManager.GetString("ToolTip_WithoutLinkWithNotIsInterfaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Twizzar API version of one or more projects does not match the Twizzar Addin version. This can cause problems. Please update the addin or the Twizzar API so that they have the same version number..
        /// </summary>
        public static string TwizzarVersionChecker_Handler_The_Twizzar_API_version_of_one_or_more_projects_does_not_match_the_Twizzar_Addin_version {
            get {
                return ResourceManager.GetString("TwizzarVersionChecker_Handler_The_Twizzar_API_version_of_one_or_more_projects_doe" +
                        "s_not_match_the_Twizzar_Addin_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TWIZZAR: An unexpected error occurred: 	 {0}. 
        /// The Addin may not work correctly. For more information see the twizzar Output..
        /// </summary>
        public static string VsNotificationService_SendToInfoBarAsync {
            get {
                return ResourceManager.GetString("VsNotificationService_SendToInfoBarAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file cannot be updated. Please close and reopen the twizzar PeekView to try again..
        /// </summary>
        public static string WorkspaceExtensions_ReplaceNode_Configuration_file_cannot_be_updated__Please_close_and_reopen_the_twizzar_PeekView_to_try_again_ {
            get {
                return ResourceManager.GetString("WorkspaceExtensions_ReplaceNode_Configuration_file_cannot_be_updated__Please_clos" +
                        "e_and_reopen_the_twizzar_PeekView_to_try_again_", resourceCulture);
            }
        }
    }
}
