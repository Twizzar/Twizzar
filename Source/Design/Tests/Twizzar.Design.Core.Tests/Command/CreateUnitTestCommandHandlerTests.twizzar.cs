// <auto-generated />

using System.Threading.Tasks;
using TwizzarInternal.Fixture;
using Twizzar.Design.CoreInterfaces.TestCreation;
using ViCommon.Functional.Monads.MaybeMonad;

namespace Twizzar.Design.Core.Tests.Command
{
    partial class CreateUnitTestCommandHandlerTests
    {
        private class CreateUnitTestCommandHandlerBuilder : ItemBuilder<Twizzar.Design.Core.Command.CreateUnitTestCommandHandler, CreateUnitTestCommandHandlerBuilderPaths>
        {
            public CreateUnitTestCommandHandlerBuilder()
            {
                this.With(p => p.Ctor.locationService.Stub<ILocationService>());

                var creationContext = new ItemBuilder<CreationContext>().Build();
                this.With(p => p.Ctor.locationService.GetCurrentLocation.Value(Task.FromResult(creationContext)));
                this.With(p => p.Ctor.documentQuery.GetOrCreateDocumentAsync.Value(Maybe.SomeAsync(creationContext)));
                this.With(p => p.Ctor.templateService.AddTemplate.Value(Task.FromResult(creationContext)));
                this.With(p => p.Ctor.documentContentCreationService.CreateContentAsync.Value(Task.FromResult(true)));
            }
        }
    }
}